spring.application.name=spring-boot-with-jpa-curd-operation
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.username=user
spring.datasource.password=password

epc.router.enabled.save-irshita=true
server.port=8082

### Syndigo Service Details:
rest.service.base-url=https://api.uat.irshita.patel.com
rest.service.auth-uri=/api/auth/authenticate
rest.service.user-name=Irshita_API
rest.service.secret-key=hello-this-is-my-secret-key

logging.level.org.springframework.web=INFO
logging.level.io.opentelemetry=DEBUG

# For OpenTelemetry SDK to send traces and metrics via HTTP
otel.traces.exporter=otlp
otel.metrics.exporter=otlp
otel.exporter.otlp.endpoint=http://localhost:4318

# For OpenTelemetry SDK to send traces and metrics via gRPC
#otel.traces.exporter=otlp
#otel.metrics.exporter=otlp
#otel.exporter.otlp.endpoint=localhost:4319


#Metrics
management.endpoints.web.exposure.include=prometheus,health,info,env,metrics
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.sla.http.server.requests=50ms, 100ms, 200ms, 400ms, 1s, 5s
management.metrics.distribution.percentiles[http.server.requests]=0.50,0.90,0.95,0.99
management.endpoint.metrics.enabled=true
management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=always

# The configuration for prometheus
spring.sleuth.sampler.probability=1.0
hawtio.authenticationEnabled=false